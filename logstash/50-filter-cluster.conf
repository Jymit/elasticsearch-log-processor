filter {
    if [component] == "cluster.metadata" {
        grok {
            match => { "message" => "\[%{USER:index_name}\] (?<mapping_action>update|create)_mapping \[%{DATA:mapping}\] (\(%{WORD:mapping_type}\))?" }
            add_tag => [ "mapping" ]
        }
        grok {
            match => { "message" => "\[%{USER:index_name}\] creating index, cause \[%{DATA:reason}\], templates \[%{DATA:index_template}\], shards \[%{POSINT}\]/\[%{POSINT}\], mappings \[%{DATA:mapping}\]" }
            add_tag => "create_index"
        }
    }
    if [component] == "cluster.action.shard" {
        grok {
            match => { "message" => "\[%{USER:index_name}\]\[%{INT:shard_id}\] received shard failed for \[%{DATA}\]\[%{DATA}\], node\[%{USER:node_id}\], \[(?<shard_type>P|R)\], s\[%{WORD:shard_state}\], (indexUUID \[%{USER:index_id}\], )?%{GREEDYDATA:details}" }
            add_tag => [ "shard_failed" ]
            add_field => { "shard" => "%{index_name}{%{shard_id}}{%{shard_type}}" }
        }
    }
    if [component] == "cluster.service" {
        grok {
            match => {
                "message" => "processing \[%{WORD} \(\[\[%{USER:index_name}\]\[%{INT:shard_id}\]%{GREEDYDATA}?"
            }
        }
        if [message] =~ /^new_master/ {
            mutate {
                add_tag => ["master_elected"]
            }
        }
        if [message] =~ /^detected_master/ {
            mutate {
                add_tag => ["master_found"]
            }
        }
        if [message] =~ /^added/ {
            mutate {
                add_tag => ["node_added"]
            }
        }
        if [message] =~ /^removed/ {
            mutate {
                add_tag => ["node_removed"]
            }
        }
    }
    mutate {
        split => {
            "mapping" => ","
            "index_template" => ","
        }
        strip => ["mapping","index_template"]
    }
}
