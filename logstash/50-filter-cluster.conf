filter {
    if [component] == "cluster.metadata" {
        grok {
            match => { "message" => "\[%{USER:index_name}\] (?<mapping_action>update|create)_mapping \[%{DATA:mapping}\] (\(%{WORD:mapping_type}\))?" }
            add_tag => [ "mapping" ]
            tag_on_failure => [ "_grokparsefailure", "_grok-50-filter-cluster-1" ]
        }
        grok {
            match => { "message" => "\[%{USER:index_name}\] creating index, cause \[%{DATA:reason}\], templates \[%{DATA:index_template}\], shards \[%{POSINT}\]/\[%{POSINT}\], mappings \[%{DATA:mapping}\]" }
            add_tag => "create_index"
            tag_on_failure => [ "_grokparsefailure", "_grok-50-filter-cluster-2" ]
        }
    }
    if [component] == "cluster.action.shard" {
        grok {
            match => { 
                "message" => [
                    "\[%{USER:index_name}\]\[%{INT:shard_id}\] %{DATA} \[%{DATA}\]\[%{DATA}\], node\[%{USER:node_id}\], \[(?<shard_type>P|R)\], s\[%{WORD:shard_state}\], (indexUUID \[%{USER:index_id}\], )?%{GREEDYDATA:details}",
                    "\[%{USER:index_name}\]\[%{INT:shard_id}\] %{DATA} \[\[%{DATA}\]\[%{DATA}\], node\[%{USER:node_id}\], \[(?<shard_type>P|R)\], v\[%{INT:shard_version:integer}\], s\[%{WORD:shard_state}\]%{GREEDYDATA}"
                ]
            }
            add_field => { "shard" => "%{index_name}{%{shard_id}}{%{shard_type}}" }
            tag_on_failure => [ "_grokparsefailure", "_grok-50-filter-cluster-3" ]
        }
        if [message] =~ /received shard failed for/ {
            mutate {
                add_tag => [ "shard_failed" ]
            }
        }
    }
    if [component] == "cluster.service" {
        grok {
            match => {
                "message" => [
                    "processing \[%{WORD} \(\[\[%{USER:index_name}\]\[%{INT:shard_id}\]%{GREEDYDATA}?",
                    "processing \[%{WORD}\(from master \[\{%{USER:[service][node_name]}\}\{%{DATA}\}\{%{IP:[service][address]}\}%{DATA}\(version: %{INT:[service][cluster_state_version]}%{GREEDYDATA}"
                ]
            }
            tag_on_failure => [ "_grokparsefailure", "_grok-50-filter-cluster-4" ]
        }
        if [message] =~ /^new_master/ {
            mutate {
                add_tag => ["master_elected"]
            }
        }
        if [message] =~ /^detected_master/ {
            mutate {
                add_tag => ["master_found"]
            }
        }
        if [message] =~ /^added/ {
            mutate {
                add_tag => ["node_added"]
            }
        }
        if [message] =~ /^removed/ {
            mutate {
                add_tag => ["node_removed"]
            }
        }
    }
    mutate {
        split => {
            "mapping" => ","
            "index_template" => ","
        }
        strip => ["mapping","index_template"]
    }
}
